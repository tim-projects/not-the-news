{
  email {$EMAIL}
  storage file_system /data
  acme_ca {$ACME_CA:https://acme-v02.api.letsencrypt.org/directory}
}

{$DOMAIN} {
  # AUTH basic_auth /* {
  # AUTH   {$EMAIL} <HASH_PLACEHOLDER>
  # AUTH }

  # Proxy the new user-state endpoint (GET & POST) to Flask
  handle /user-state* {
    reverse_proxy 127.0.0.1:3000
  }
  handle /load-config* {
	reverse_proxy 127.0.0.1:3000
  }
  handle /save-config* {
	reverse_proxy 127.0.0.1:3000
  }
  # Proxy feed-sync API endpoints to Flask
  handle /time* {
    reverse_proxy 127.0.0.1:3000
  }
  handle /guids* {
    reverse_proxy 127.0.0.1:3000
  }
  handle /items* {
    reverse_proxy 127.0.0.1:3000
  }
  root * /app/www
  file_server
  # — Compression & caching for HTML/JS/XML/JSON assets —
  encode {
    # AUTH cookie {
    # AUTH   name auth_token
    # AUTH   lifetime 2160h
    # AUTH   secret "<PASSWORD_HASH>"
    # AUTH   secure
    # AUTH   http_only
    # AUTH }
    br 11
    gzip 5

    # only compress these MIME types
    match {
      header Content-Type text/html
      header Content-Type text/css
      header Content-Type application/javascript
      header Content-Type application/rss+xml
      header Content-Type application/xml
      header Content-Type text/xml
      header Content-Type application/json
    }

    # skip tiny responses
    minimum_length 512
  }

  # instruct browsers and intermediate caches to keep for 1 hour
  #header {
  #  Cache-Control "public, max-age=3600"
  #}

  # Disable caching for config API endpoints
  @api_nocache {
    path /load-config*
    path /save-config*
    path /user-state*
  }
  header @api_nocache {
    Cache-Control "no-cache, no-store, must-revalidate"
    Pragma "no-cache"
    Expires "0"
  }
  @feed {
    path /feed.xml
  }
  handle @feed {
    root * /data/feed
    header {
      Access-Control-Allow-Origin   *
      Access-Control-Expose-Headers ETag, Last-Modified
    }
    file_server
  }
}

