@import url('https://fonts.googleapis.com/css2?family=Prata&display=swap');

/* Tell browser we support both light & dark */
html {
  color-scheme: light dark;
}

/* System dark mode */
@media (prefers-color-scheme: dark) {
  :root {
  --bg: #f5f5f5;
  --fg: darkslategrey;
  --primary: cornflowerblue;
  --secondary: aliceblue;
  --card-bg: #ffffff;
  --card-border: #EEE;
  --card-shadow-color: lightgrey;
  }
  body, html {
    background-image: none !important;
  }
  .pubdate p, .itemfrom p { color: var(--fg); opacity: 0.6; }
}

/* Manual theme overrides */
html.light {
  --bg: #f5f5f5;
  --fg: darkslategrey;
  --primary: cornflowerblue;
  --secondary: slategrey;
  --card-bg: ghostwhite;
  --card-border: #EEE;
  --card-shadow-color: lightgrey;
  /* show noise background */
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'><defs><filter id='tileableNoise' x='0%' y='0%' width='100%' height='100%'><feTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='3' stitchTiles='stitch' result='noise'/><feColorMatrix in='noise' type='saturate' values='0'/><feComponentTransfer><feFuncA type='linear' slope='0.05'/></feComponentTransfer></filter></defs><rect width='100%' height='100%' fill='%23f5f5f5'/><rect width='100%' height='100%' filter='url(%23tileableNoise)'/></svg>");
  background-repeat: repeat;
  button.close, button.star { background: aliceblue; }
  button.close:hover { color: aliceblue; }
  button.star:hover { color: aliceblue; }
  .itemtitle { background: linear-gradient(360deg, aliceblue 0%, transparent); }
  .itemtitle a { color: steelblue; }
}

html.dark {
  --bg: #1A1A1B;
  --fg: gainsboro;
  --primary: cornflowerblue;
  --secondary: aliceblue;
  --card-bg: #1E1E1E;
  --card-border: #343536;
  --card-shadow-color: rgba(0,0,0,0.5);
  a:visited { color: #0060A8; }
  background-image: none;
  button.close { box-shadow: -1px 1px 0 1px var(--card-shadow-color); }
  button.star { box-shadow: -2px -2px 0 1px var(--card-shadow-color); }
  #header { text-shadow: 2px 2px black; }
}
/* make the cog button match your dark theme */
html.dark .cog-wheel-button {
  background: var(--card-bg);
  box-shadow: -1px 1px 0 1px var(--card-shadow-color);
  color: var(--fg);
}
html.dark .cog-wheel-button:hover {
  background: var(--fg);
  color: var(--bg);
}

html.dark .switch input:checked + .slider {
  background-color: #2c4c4c;
}


/* Apply variables */
body, html {
  color: var(--fg);
  word-break: break-word;
  font-size: calc(18px + .5vw);
  background-color: var(--bg);
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'><defs><filter id='tileableNoise' x='0%' y='0%' width='100%' height='100%'><feTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='3' stitchTiles='stitch' result='noise'/><feColorMatrix in='noise' type='saturate' values='0'/><feComponentTransfer><feFuncA type='linear' slope='0.05'/></feComponentTransfer></filter></defs><rect width='100%' height='100%' fill='%23f5f5f5'/><rect width='100%' height='100%' filter='url(%23tileableNoise)'/></svg>");
  background-repeat: repeat;
}
p, h1, a { color: var(--fg); }
.itemdescription a { color: var(--secondary); }

title { display: none; }

button.close {
  font-size: xx-large;
  background: var(--bg);
  color: var(--fg);
  border-radius: 0 40px 0 20px;
  opacity: 0.8;
  box-shadow: -1px 1px 0 1px whitesmoke;

  position: absolute;
  top: 0;
  right: 0;
  margin: 0;
  padding: 0 1rem 0 1rem;
  border: none;
  cursor: pointer;
}

button.close:hover {
  color: var(--secondary);
  background: var(--primary);
}
/* Star button, same shape as close */
button.star {
  font-size: xx-large;
  background: var(--bg);
  color: var(--fg);
  border-radius: 20px 0 0 0;
  opacity: 0.6;
  box-shadow: -2px -2px 0 1px whitesmoke;

  float: right;
  position: absolute;
  bottom: 2px;
  right: 0;
  margin: 0;
  padding: 0 1rem 0 1rem;
  border: none;
  cursor: pointer;
}

button.star:hover {
  color: var(--secondary);
  background: var(--primary);
}

/* Turn the star gold when starred */
button.star.starred, button.close.hidden {
  color: gold;
  background: transparent;
}

.pubdate,
.itemfrom {
  /* shared padding, font & background */
  padding-right: 1em;
  padding-bottom: 0.5em;
  color: gray;
  font-style: italic;
  font-size: 1rem;
  background-color: var(--card-bg);
}

.pubdate {
  /* the date itself stays right‐aligned */
  text-align: right;
}

.itemfrom {
  /* source on left, date on right */
  display: flex;
  justify-content: space-between;
  align-items: center;
  /* reset text‐align so flex positioning wins */
  text-align: left;
}

.pubdate p, .itemfrom p {
  margin: 0;
  line-height: 0;
}

.spacer { margin: 1.4vh; }

.itemdate h3 {
  margin-top: 0;
  margin-bottom: -30px;
  padding-top: 3em;
  padding-right: 8em;
  float: right;
}

img {
  box-shadow: 0 4px 12px var(--card-shadow-color);
  aspect-ratio: 16 / 9;
  object-fit: cover;
  width: 100%;
  border-radius: 8px;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}
img.loaded {
  opacity: 1;
}
img.entry-image {
    margin-bottom: 1em;
}

.itemdescription {
  font-family: auto;
  padding: 0.25em 1.8em 2em;
  width: auto;
}

table { min-width: -webkit-fill-available; }

td { width: 60%; }

td p a, td a, span { display: grid; }

td p a { padding-left: 3em; }

td a { line-height: 1.6; }

p { line-height: 1.6 !important; }

h1 { line-height: 1.6; font-size: 1.3em; font-weight: lighter; }

a { text-decoration: none; transition: color .3s linear; }
a:visited { color: grey; }
a:hover { color: var(--primary); }

/* Updated header: sticky and flex */
#header {
  position: static;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 1rem;
  background-color: transparent;
  font-family: 'Prata', serif;
  text-transform: uppercase;
  text-align: center;
  color: darkgray;
  font-size: small;
  font-variant: all-small-caps;
}
 #header .switch {
   margin-left: auto;
   margin-right: 1rem;
 }

/* simple styling for our filter dropdown */
.filter-select {
  margin: 0 1rem;
  padding: 0.5em 0.5em;
  font-size: inherit;
  border-radius: 4px;
  background: var(--card-bg);
  border: 1px solid var(--card-border);
  opacity: 0.8;
}
.filter-select:focus-visible {
    outline: none;
}
select#filter-selector {
    background: var(--card-bg);
    color: var(--fg);
}
select#filter-selector option:hover {
    background: var(--primary);
}
/* Toggle switch styling */
.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
  font-size: 1rem;
  font-family: inherit;
  margin-left: -3em;
  margin-top: -0.3em;
}
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}
.switch .slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 34px;
}
.switch .slider::before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}
.switch input:checked + .slider {
  background: var(--primary) !important;
}
.switch input:checked + .slider::before {
  transform: translateX(26px);
}
#theme-text, #sync-text, #images-text {
  font-size: 1rem;
  font-family: inherit;
  margin-left: -3em;
  margin-top: -0.3em;
}

h2, h3 {
  font-family: 'Prata', serif;
  font-weight: 100;
  color: var(--fg);
}
h3 { margin-top: 2em; font-size: large; }

#items { width: 100%; display: block; overflow-x: hidden; }

.itembox { margin-top: 2em; }

.item {
  border: 1px solid var(--card-border);
  background-color: var(--card-bg);
  box-shadow: 1px 1px 100px 1px var(--card-shadow-color);
  align-content: center;
  margin-bottom: 1.4em;
  border-radius: 40px;
  display: block;
  float: right;
  position: relative;
}

.itemtitle {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  border-radius: 40px 40px 0 0;
  padding: 0.75em 3.5rem 0.2em 1.2em;
  border-bottom: 1px solid var(--card-border);
  font-size: 1.5rem !important;
  font-family: 'Prata', serif;
  text-transform:capitalize;
  line-height: 1.4em;
  min-height: calc(1.4em * 2);
  background: linear-gradient(360deg, var(--bg) 0%, transparent);
  margin-top: 0;
  position: relative;
}

.itemtitle h1 { flex: 1; word-break: break-word; }
.itemtitle h1:hover { color: var(--primary); }

#loading-screen {
  font-family: 'Prata', serif;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--bg);
  color: var(--fg);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  font-size: xx-large;
}

/* hide by default */
#scroll-to-top {
  bottom: 2rem;
  right: 2rem;
  width: 4rem;
  height: 4rem;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  font-size: xx-large;
  color: var(--primary);
  background: var(--secondary);
  border-radius: 100px;

  position: fixed;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
  z-index: 1000;
}

/* when visible, fade in */
#scroll-to-top.visible {
  opacity: 1;
}

#scroll-to-top,
.cog-wheel-button {
  position: fixed;
  bottom: 20px;
  z-index: 9999;
  background-color: #fff;
  color: darkgrey;
  border-radius: 50%;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  cursor: pointer;
  border-color: whitesmoke;
}

#scroll-to-top:hover,
.cog-wheel-button:hover {
  background-color: #555;
  color: white;
}

.cog-wheel-button {
  left: 20px;
  font-size: 55px;
  line-height: 0.94;
}

.modal { display: none; position: relative; z-index: 9999; left: 0; top: 0;
  width: 100%; height: 100%; overflow: auto; background-color: rgba(0, 0, 0, 0.5);
}

.modal-content { 
  background-color: var(--card-bg); margin: 10% auto;
  border-radius: 40px;
  border: 1px solid var(--card-border);

  display: flex;                /* enable column flex layout */
  position: relative;
  flex-direction: column;
  background: var(--bg);
  color: var(--fg);
  padding: 1.5rem;
  width: 90%;
  max-width: none;              /* remove 400px cap */
  max-height: 90vh;             /* constrain total modal height */
  overflow: hidden;             /* children will scroll internally */
  box-shadow: 0 2px 10px rgba(0,0,0,0.3);
  height: 100vh;
  box-sizing: border-box;
}

.modal-content form { padding: 1px; line-height: 1.6; }
.modal-content h2 { margin-top: 0; }
.modal-content textarea { width: -webkit-fill-available; }

@keyframes fadeOutUp { from { opacity: 1; transform: translateY(0); } to { opacity: 0; transform: translateY(-20px); } }
.fade-out-up { animation: fadeOutUp 0.5s ease forwards; }

.transition-all { transition: all 0.5s ease; }
.translate-y-0 { transform: translateY(0); opacity: 1; }
.translate-y-4 { transform: translateY(-1rem); opacity: 0; }


/* Alpine x-transition classes for item leave animation */
.transition {
  transition-property: opacity, transform;
}
.duration-200 {
  transition-duration: 0.5s;
}
.ease-in {
  transition-timing-function: ease-in;
}
.transform {
  /* enables transform animations */
}
.opacity-100 {
  opacity: 1 !important;
}
.opacity-0 {
  opacity: 0 !important;
}
.translate-x-0 {
  transform: translateX(0) !important;
}
.translate-x-full {
  transform: translateX(100%) !important;
}
/* 1. Collapse description from bottom to top */
.item {
  overflow: visible;
  max-height: none;
  /* animate slide and collapse together */
  transition: 
  transform 0.25s ease,
  max-height 0.25s ease,
  padding 0.25s ease;
}

ul.feed-list, .feed-container {
  overflow-x: hidden;  /* clip any child transform that goes beyond the right edge */
}
/* Modal overlay covers full screen */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

/* Modal content box */
.modal-content h2 { font-size: smaller; }
.modal-content {
  background: var(--bg);
  color: var(--fg);
  padding: 1.5rem;
  max-width: 400px;
  width: 90%;
  box-shadow: 0 2px 10px rgba(0,0,0,0.3);
}
/* Grouping & spacing */
.settings-group {
  margin-top: 0.5rem;
  display: flex;
  flex-direction: column;
  flex: 1;
  gap: 0.5rem;
}
.settings-group.grow {
  flex: 1;                          /* allow group to grow */
  display: flex;
  flex-direction: column;
  margin-top: 1rem;
}
/* 3) Within those groups, let the textarea itself fill the group */
.settings-group.grow .settings-textarea {
  flex: 1;                          /* textarea expands to fill its .grow parent */  /* :contentReference[oaicite:3]{index=3} */
  min-height: 3em;                  /* still at least 3 lines tall */
  overflow-y: auto;                 /* scroll when content overflows */
}

/* 4) Keep non-growing groups (theme-switch & save buttons) at natural height */
.settings-group:not(.grow) {
  flex: 0;                          /* do not grow or shrink */
}

/* (Optional) Ensure your save-button groups don’t steal extra space */
.settings-group:not(.grow) button {
  align-self: flex-end;
}
/* Style all buttons inside .settings-group */
.settings-group button {
  font-size: 1rem;            /* Make text easy to read */
  min-width: 8rem;            /* Ensure buttons are wide enough */
  align-self: flex-end;       /* Push buttons to the right edge */
  padding-top: 0;             /* Remove extra top padding */
  border-radius: 5px;         /* Round the corners */
}

/* Textareas for settings */

/* Keywords & RSS boxes: min 5 lines tall, scrollable */
.settings-textarea {
  width: 100%;
  flex: 1;                      /* fill available vertical space */
  min-height: 3em;              /* at least five lines tall */
  padding: 0.5rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  resize: none;                 /* lock size to layout */
  overflow-y: scroll;
  font-family: inherit;
  font-size: 1rem;
  line-height: 1.4;
  background: var(--card-bg);
  color: var(--fg);
}

/* Settings button style */
.settings-btn {
  width: 4em;
  height: 4em;
  background-color: var(--bg);
  color: var(--fg);
  margin-left: auto;
  border: none;
  border-radius: 100px;
  opacity: 0.8;
  padding-top: 0.4em;
}
.settings-btn:hover {
  background-color: var(--primary); /* changes color on hover */
}
/* make the label sit left and the switch sit right on one line */
.modal-content .theme-switch, .modal-content .sync-switch, .modal-content .images-switch {
  display: flex;                  /* switch to flex layout */
  justify-content: space-between; /* push children to the ends */
  align-items: center;            /* vertical-center them */
  width: 100%;                    /* fill the modal’s content width */
  margin-top: 1rem;               /* optional spacing above */
}

/* style the label to match your other text */
.modal-content .settings-label {
  font-size: 1rem;
  font-family: inherit;
  color: var(--fg);
}

/* Responsive breakpoints */
@media (max-width: 480px) {
  body, html { font-size: 14px; }
  p { font-size: 1rem !important; line-height: 1.4 !important; }
  .pubdate p, .itemfrom p { font-size: x-small !important; }
  .pubdate,.itemfrom { padding-right: 0.5em; }
  /* preserve flex layout on mobile */
  .itemfrom {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .filter-select { margin-left: auto; }

  .item { box-shadow: 1px 1px 50px 1px var(--card-shadow-color !important); max-width: 100%; border-radius: 10px; margin: 1em auto; float: none; }
  .modal-content { border-radius:10px; }
  .itemtitle { font-size: 1.25rem !important;
    padding: 1em 3rem 0.5em 0.75em;
    min-height: calc(1.4em * 3);
  }
  button.close { font-size: 1.25rem; border-radius: 0 10px 0 10px; opacity: 0.6; position: absolute; }
  button.star { font-size: 1.25rem; border-radius: 10px 0 0 0; opacity: 0.6; position: absolute; }
  .itemdescription { padding: 1em 1.8em 2em !important; }
  #header { padding: 0rem 1rem; }
  .modal-content > button.close {
    font-size: 1.25rem;
    opacity: 0.8;
  }
  #scroll-to-top { bottom: 1em; right: 1em; width: 4rem; height: 4rem; }

@media (min-width: 481px) and (max-width: 767px) {
  body, html { font-size: 16px; }
  p { font-size: 1rem !important; line-height: 1.5 !important; }
  .pubdate,.itemfrom { padding-right: 0.5em; }
  .item { box-shadow: 1px 1px 50px 1px var(--card-shadow-color !important); max-width: 90%; border-radius: 30px; margin: 1.5em auto; float: none; }
  .itemtitle { font-size: 1.5rem !important;
    padding: 0.75em 2.5rem 0.2em 1.2em;
    min-height: calc(1.4em * 3);
  }
  .itemdescription { padding: 1em 1.8em 2em !important; }
  button.close, button.star { font-size: 1.5rem; }
  .filter-select { margin-left: auto; }
}

@media (min-width: 768px) and (max-width: 1023px) {
  body, html { font-size: calc(18px + .2vw); }
  p { line-height: 1.6 !important; }
  .item { max-width: 85%; border-radius: 40px; margin: 1.5em auto; float: none; }
  .itemtitle { font-size: 1.75rem !important;
    padding: 0.75em 3rem 0.2em 1.2em;
  }
  button.close, button.star { font-size: 2rem; }
}

@media (min-width: 1024px) {
  .pubdate p, .itemfrom p { font-size: smaller !important; }
  .item { float: unset; margin-left: 20%; margin-right: 20%; }
  #header {
    display: flex;
    align-items: center;
    justify-content: center; /* centers everything by default */
    position: relative;       /* only needed if you absolute‐center the H2 below */
  }
  .filter-select { font-size: large; }

  /* absolute‐center the H2 */
  #header h2 {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    font-size: 1rem;
    margin-top: 0.5em;
  }

  /* push the switch off to the right */
  #header .switch {
    margin-left: auto;
    margin-right: 1rem;  /* match your padding */
  }
    .modal-content {
    min-width: 60% !important;
    /* mirror .item’s 20% left/right margins */
    margin-left: 20% !important;
    margin-right: 20% !important;
  }
}

/* Make modal full-screen on small devices */
@media (max-width: 640px) {
  .modal-content {
    width: 100%;
    height: 100%;
    margin: 0 1em 0 1em;
  }
}
/* Mirror .item’s width at different breakpoints */
@media (min-width: 768px) and (max-width: 1023px) {
  .modal-content { width: 85%; }      /* .item max-width:85% */
}
@media (min-width: 481px) and (max-width: 767px) {
  .modal-content { width: 90%; }      /* .item max-width:90% */
}
