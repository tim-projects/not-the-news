i@import url('https://fonts.googleapis.com/css2?family=Playfair+Display&display=swap');

/* Tell browser we support both light & dark */
html {
  color-scheme: light dark;
}

/* Default to dark theme */
:root {
  --bg: #1A1A1B;
  --fg: gainsboro;
  --primary: cornflowerblue;
  --secondary: aliceblue;
  --card-bg: #1E1E1E;
  --card-border: #343536;
  --card-shadow-color: black;
  --fg-muted: gray;
  /* for secondary text/borders */
  --bg-alt: #ffffff;
  /* alt card bg or “light” backgrounds */
  --toggle-track: #ccc;
  /* your switch slider track */
  --link-highlight: aliceblue;
  /* for the gradient & button bg in light mode */
  --border-radius: 5px;
  /* Define a consistent border-radius variable */

  /* New: Define a darker primary for active states */
  --primary-darker: rgb(85, 128, 204); /* A slightly darker cornflowerblue */
  --secondary-darker: rgb(180, 200, 220); /* A slightly darker aliceblue, for hover */
  --button-text-light: white; /* Text color for dark buttons */
  --button-text-dark: black; /* Text color for light buttons */
  --link-visited: darkgray; /* Default visited link color for dark theme */
}

/* System light mode */
@media (prefers-color-scheme: light) {
  :root {
    --bg: #f5f5f5 !important;
    --fg: darkslategrey !important;
    --primary: cornflowerblue !important;
    --secondary: slategrey !important; /* Note: slategrey is darker than aliceblue */
    --card-bg: #ffffff !important;
    --card-border: #EEE !important;
    --card-shadow-color: lightgrey !important;
    --primary-darker: rgb(85, 128, 204) !important; /* A slightly darker cornflowerblue */
    --secondary-darker: rgb(90, 100, 110) !important; /* A slightly darker slategrey */
    --link-highlight: cornflowerblue !important; /* Ensure highlight is appropriate for light */
    --link-visited: #6A5ACD !important; /* A common visited link color for light themes */
  }
}

/* Manual theme overrides */
html.light {
  /* IMPORTANT FIX: Explicitly set all light theme variables here */
  --bg: #f5f5f5 !important;
  --fg: darkslategrey !important;
  --primary: cornflowerblue !important;
  --secondary: slategrey !important;
  --card-bg: #ffffff !important;
  --card-border: #EEE !important;
  --card-shadow-color: lightgrey !important;
  --primary-darker: rgb(85, 128, 204) !important;
  --secondary-darker: rgb(90, 100, 110) !important;
  --link-highlight: cornflowerblue !important;
  --link-visited: #6A5ACD !important;

  /* show noise background */
  /* Assuming --bg-light was intended to be --bg here. Adjusted to --bg. */
  background-color: var(--bg) !important;
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'><defs><filter id='tileableNoise' x='0%' y='0%' width='100%' height='100%'><feTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='3' stitchTiles='stitch' result='noise'/><feColorMatrix in='noise' type='saturate' values='0'/><feComponentTransfer><feFuncA type='linear' slope='0.05'/></feComponentTransfer></filter></defs><rect width='100%' height='100%' /><rect width='100%' height='100%' filter='url(%23tileableNoise)'/></svg>") !important;
  background-repeat: repeat;

  button.close,
  button.star {
    background: var(--link-highlight); /* This will now be cornflowerblue in light mode */
  }

  .itemtitle {
    background: linear-gradient(360deg, var(--link-highlight) 0%, transparent);
  }

  .itemtitle a {
    color: var(--primary);
  }
}

html.dark {
  background-image: none;

  #header {
    text-shadow: 2px 2px 2px var(--card-shadow-color);
  }
}

/* General a:visited rule for both themes, using the defined variable */
a:visited {
  color: var(--link-visited);
}

/* make the cog button match your dark theme */
html.dark .cog-wheel-button {
  background: var(--card-bg);
  box-shadow: -1px 1px 0 1px var(--card-shadow-color);
  color: var(--fg);
}

html.dark .cog-wheel-button:hover {
  background: var(--fg);
  color: var(--bg);
}

html.dark .switch input:checked+.slider {
  background-color: var(--toggle-checked-dark, var(--primary));
}


/* Apply variables */
body,
html {
  color: var(--fg);
  word-break: break-word;
  font-size: 14px;
  background-color: var(--bg);
  background-repeat: repeat;
}

p,
h1,
a {
  color: var(--fg);
}

.itemdescription a {
  color: var(--secondary);
}

/* Corrected and expanded header list for text-shadow */
a,
h1,
h2,
h3,
h4,
h5,
h6 {
  text-shadow: 2px 2px 2px var(--card-shadow-color);
}

title {
  display: none;
}

---

### Button Styles

/* Base button styles - apply to all relevant buttons */
button {
  cursor: pointer;
  border: none; /* Default for most buttons */
  transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease, opacity 0.2s ease;
}

/* General button hover state */
button:hover {
  opacity: 1 !important; /* Ensure full opacity on hover for all buttons */
}

/* General button focus state for accessibility */
button:focus {
  outline: none; /* Remove default browser outline */
  box-shadow: 0 0 0 3px var(--primary), inset 0 0 0 1px var(--primary); /* Custom outline using primary color */
}

/* General button active state for visual feedback when pressed */
button:active {
  transform: translateY(1px);
  box-shadow: inset 1px 1px 5px rgba(0,0,0,0.2);
}

/* Specific button styles */

button.close {
  font-size: xx-large;
  background: var(--bg);
  color: var(--fg);
  border-radius: 0 40px 0 20px;
  opacity: 0.8;
  box-shadow: -1px 1px 0 1px var(--card-border);

  position: absolute;
  top: 1px;
  right: 1px;
  margin: 0;
  padding: 0 1rem 0 1rem;
}

button.close:hover {
  color: var(--secondary);
  background: var(--primary);
}

button.close:focus {
  box-shadow: -1px 1px 0 1px var(--card-border), 0 0 0 3px var(--primary); /* Combine with base focus */
  color: var(--secondary); /* Match hover color on focus */
  background: var(--primary); /* Match hover background on focus */
}

button.close:active {
    background-color: var(--primary-darker);
    color: var(--secondary);
}


/* Star button, same shape as close */
button.star {
  font-size: xx-large;
  background: var(--bg);
  color: var(--fg);
  border-radius: 20px 0 0 0;
  opacity: 0.6;
  box-shadow: -2px -2px 0 1px var(--card-shadow-color); /* Kept specific shadow */

  float: right;
  position: absolute;
  bottom: 2px;
  right: 0;
  margin: 0;
  padding: 0 1rem 0 1rem;
}

button.star:hover {
  color: var(--secondary);
  background: var(--primary);
}

button.star:focus {
  box-shadow: -2px -2px 0 1px var(--card-shadow-color), 0 0 0 3px var(--primary); /* Combine with base focus */
  color: var(--secondary); /* Match hover color on focus */
  background: var(--primary); /* Match hover background on focus */
}

button.star:active {
  background-color: var(--primary-darker);
  color: var(--secondary);
}

/* Turn the star gold when starred */
button.star.starred,
button.close.hidden {
  color: gold;
  opacity: 1;
  background: transparent; /* Assuming you want transparent for starred/hidden */
}
/* Re-apply hover for starred/hidden states if you want a different effect */
button.star.starred:hover,
button.close.hidden:hover {
  background-color: rgba(255, 215, 0, 0.1); /* Slight highlight on hover for gold items */
  color: gold;
}
button.star.starred:focus,
button.close.hidden:focus {
  box-shadow: 0 0 0 3px gold, inset 0 0 0 1px gold; /* Gold outline for focused gold items */
  color: gold;
  background-color: rgba(255, 215, 0, 0.1);
}
button.star.starred:active,
button.close.hidden:active {
  background-color: rgba(255, 215, 0, 0.2);
  color: gold;
}


.itemfrom {
  /* shared padding, font & background */
  padding-right: 1em;
  opacity: 0.6;
  padding-bottom: 0.5em;
  font-style: italic;
  font-size: 1rem;
  background-color: var(--card-bg);
}

.pubdate {
  /* the date itself stays right‐aligned */
  text-align: right;
}

.itemfrom {
  /* source on left, date on right */
  display: flex;
  justify-content: space-between;
  align-items: center;
  /* reset text‐align so flex positioning wins */
  text-align: left;
}

.pubdate p,
.itemfrom p {
  margin: 0;
  line-height: 0;
}

.spacer {
  margin: 1.4vh;
}

.itemdate h3 {
  margin-top: 0;
  margin-bottom: -30px;
  padding-top: 3em;
  padding-right: 8em;
  float: right;
}

img {
  box-shadow: 0 4px 12px var(--card-shadow-color);
  aspect-ratio: 16 / 9;
  object-fit: cover;
  width: 100%;
  border-radius: 8px;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

img.loaded {
  opacity: 1;
}

img.entry-image {
  margin-bottom: 1em;
}

.itemdescription {
  font-family: auto;
  padding: 0.25em 1.8em 2em;
  width: auto;
}

table {
  min-width: -webkit-fill-available;
}

td {
  width: 60%;
}

td p a,
td a,
span {
  display: grid;
}

td p a {
  padding-left: 3em;
}

td a {
  line-height: 1.6;
}

p {
  line-height: 1.6 !important;
}

h1 {
  line-height: 1.4;
  font-size: 1.3em;
  font-weight: lighter;
}

h2,
h3 {
  font-family: 'Playfair Display', serif;
  font-weight: 100;
  color: var(--fg);
  line-height: 1.4;
}

h3 {
  margin-top: 2em;
  font-size: large;
}

a {
  text-decoration: none;
  transition: color .3s linear;
}

a:hover {
  color: var(--primary);
}

---

### Header Styles

/* Updated header: sticky and flex */
#header {
  position: static;
  z-index: 1000;
  display: flex;
  align-items: center; /* Ensures vertical centering for direct children */
  justify-content: space-between; /* This pushes left-aligned and right-aligned groups to ends */
  padding: 1rem 1rem;
  background-color: transparent;
  font-family: 'Playfair Display', serif;
  font-weight: 400;
  text-transform: uppercase;
  color: var(--fg-muted);
  font-size: small;
  font-variant: all-small-caps;
}

/* New style for the title in the header */
#header .ntn-title {
  /* Use margin auto to push it as far left as possible from the next flex item (header-options) */
  margin-right: auto;
  /* Add flex to center the h2 vertically within ntn-title if it's not the only content */
  display: flex;
  align-items: center;
  /* Reset previous desktop absolute positioning */
  position: static;
  left: unset;
  transform: unset;
}

/* Ensure h2 within ntn-title is vertically centered */
#header .ntn-title h2 {
    margin: 0; /* Remove default margin that might affect centering */
    line-height: 1; /* Adjust line-height for precise vertical centering */
}

/* Grouping for shuffle button and settings button */
#left-aligned-controls {
  display: flex;
  align-items: center;
  gap: 1rem; /* Space between items */
  /* This margin-right will push itself and ntn-title to the left,
     and push header-options to the far right. */
  margin-right: auto;
}

/* Ensure header-options is always aligned to the far right */
#header-options {
  display: flex;
  align-items: center; /* Vertically center items within header-options */
  margin-left: auto; /* This will push header-options to the far right */
  gap: 1rem; /* Space between the switch and the filter */
}

/* Remove margin-left from header .switch as it's handled by #header-options */
#header .switch {
  margin-left: 0;
  margin-right: 0; /* No longer need margin-right if gap is on parent */
}

/* simple styling for our filter dropdown */
.filter-select {
  margin: 0; /* Reset margins as it's now part of the flex group */
  padding: 0.5em 0.5em;
  font-size: inherit;
  border-radius: 4px;
  background: var(--card-bg);
  border: 1px solid var(--card-border);
  opacity: 0.8;
  box-shadow: 1px 1px 5px var(--card-shadow-color);
}

.filter-select:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px var(--primary); /* Focus for selects */
}

select#filter-selector {
  background: var(--card-bg);
  color: var(--fg);
}

/* Toggle switch styling */
.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
  font-size: 1rem;
  font-family: inherit;
  flex-shrink: 0;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.switch .slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--toggle-track);
  transition: .4s;
  border-radius: 34px;
}

.switch .slider::before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

.switch input:checked+.slider {
  background: var(--primary) !important;
}

.switch input:checked+.slider::before {
  transform: translateX(26px);
}

/* The text for the toggles (e.g., "yes", "dark", "no") */
#theme-text,
#sync-text,
#images-text {
  font-size: 1rem;
  font-family: inherit;
  white-space: nowrap;
  margin-right: 0.5rem; /* Space between the text and the toggle switch */
  text-align: right; /* Align text to the right before the switch */
}


#items {
  width: 100%;
  display: block;
  overflow-x: hidden;
}

.itembox {
  margin-top: 2em;
}

.item {
  border: 1px solid var(--card-border);
  background-color: var(--card-bg);
  align-content: center;
  display: block;
  position: relative;
  box-shadow: 0px 4px 15px -5px var(--card-shadow-color);
  max-width: 100%;
  margin: 1em auto;
  float: none;
}

.itemtitle {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  padding: 0.75em 3.5rem 0.2em 1.2em;
  border-bottom: 1px solid var(--card-border);
  font-family: 'Playfair Display', serif;
  font-weight: 400;
  text-transform: capitalize;
  min-height: calc(1.4em * 2);
  background: linear-gradient(360deg, var(--bg) 0%, transparent);
  margin-top: 0;
  position: relative;
}

.itemtitle h1,
.itemtitle h2 {
  flex: 1;
  word-break: break-word;
}

.itemtitle h1 {
  font-size: x-large !important;
}

.itemtitle h2 {
  font-size: large !important;
}

.itemtitle h1:hover {
  color: var(--primary);
}

.itemtitle h2:hover {
  color: var(--primary);
}

.source-url {
  display: none;
}

#loading-screen {
  font-family: 'Playfair Display', serif;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--bg);
  color: var(--fg);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  font-size: xx-large;
}

---

### Scroll to Top Button & Cog Wheel Button

/* hide by default */
#scroll-to-top {
  bottom: 2rem;
  right: 2rem;
  width: 4rem;
  height: 4rem;
  opacity: 0;
  transition: opacity 0.3s ease-in-out, background-color 0.3s, color 0.3s, box-shadow 0.3s, transform 0.2s;
  font-size: xx-large;
  color: var(--primary);
  background: var(--secondary);
  border-radius: 50%; /* Changed to 50% for perfect circle */

  position: fixed;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  cursor: pointer;
  z-index: 1000;
}

/* when visible, fade in */
#scroll-to-top.visible {
  opacity: 1;
}

#scroll-to-top:hover {
  background-color: var(--primary); /* Hover becomes primary */
  color: var(--button-text-light); /* Text becomes light for primary */
}

#scroll-to-top:focus {
  outline: none;
  box-shadow: 0 0 0 3px var(--primary), 0 2px 4px rgba(0, 0, 0, 0.3); /* Custom outline */
  background-color: var(--primary);
  color: var(--button-text-light);
}

#scroll-to-top:active {
  background-color: var(--primary-darker);
  transform: translateY(1px);
}

.cog-wheel-button {
  /* Removed fixed positioning as it will be part of the header flex layout */
  font-size: 55px; /* Size for the cog icon */
  line-height: 0.94;
  transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease, opacity 0.2s ease;

  /* Resetting styles that were for fixed positioning */
  position: static;
  bottom: unset;
  left: unset;

  /* Adjustments for being in a flex container and making it round */
  margin: 0; /* Remove any default margins */
  background-color: var(--card-bg); /* Use card-bg as default, as per dark theme definition */
  color: var(--fg-muted); /* Original base color, often gray */
  border-radius: 50%; /* Make it perfectly round */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  cursor: pointer;
  border: 1px solid var(--card-border); /* Added border for consistency */
  height: 3.5rem; /* Standardized height to match shuffle-btn for roundness */
  width: 3.5rem; /* Standardized width for a circle to match shuffle-btn */
  display: flex; /* Make it a flex container for centering content */
  justify-content: center; /* Center icon horizontally */
  align-items: center; /* Center icon vertically */
  padding: 0; /* Remove padding if any */
}

.cog-wheel-button:hover {
  background-color: var(--primary); /* Changed to primary on hover */
  color: var(--button-text-light); /* Changed to light text on hover */
}

.cog-wheel-button:focus {
  outline: none;
  box-shadow: 0 0 0 3px var(--primary), 0 2px 5px rgba(0, 0, 0, 0.2);
  background-color: var(--primary);
  color: var(--button-text-light);
}

.cog-wheel-button:active {
  background-color: var(--primary-darker);
  transform: translateY(1px);
  color: var(--button-text-light); /* Ensure text color remains light on active */
}

/* Dark theme specific override for cog-wheel-button */
html.dark .cog-wheel-button {
  background: var(--card-bg); /* Default dark theme background for consistency */
  box-shadow: -1px 1px 0 1px var(--card-shadow-color);
  color: var(--fg); /* Default dark theme foreground for consistency */
}

html.dark .cog-wheel-button:hover {
  background: var(--fg); /* Dark theme hover background */
  color: var(--bg); /* Dark theme hover text color */
}


---

### Modal Styles

.modal {
  position: fixed; /* Changed to fixed for full overlay */
  z-index: 9999;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex; /* This ensures modal-content can be centered */
  justify-content: center;
  align-items: center;
}

/* Alpine x-cloak directive for initial hiding */
[x-cloak].modal {
  display: none !important;
}

.modal-content {
  background-color: var(--card-bg);
  margin: 0; /* Reset margin to allow flex centering */
  border: 1px solid var(--card-border);
  display: flex;
  flex-direction: column;
  background: var(--bg);
  color: var(--fg);
  padding: 2rem;
  padding-top: 3.5rem;
  width: 90%;
  max-width: 90vw;
  max-height: 90vh;
  overflow-y: auto; /* Allow content to scroll if it overflows */
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  height: auto;
  min-height: 50vw; /* Keep a minimum height for better appearance */
  box-sizing: border-box;
  position: relative;
}

.modal-content form {
  padding: 1px;
  line-height: 1.6;
}

.modal-content h2 {
  margin-top: 1rem;
  font-size: 1.5em;
}

/* Alpine x-transition classes for item leave animation */
.transition {
  transition-property: opacity, transform;
}

.duration-200 {
  transition-duration: 0.2s; /* Adjusted from 0.5s for faster transition */
}

.ease-in {
  transition-timing-function: ease-in;
}

.opacity-100 {
  opacity: 1 !important;
}

.opacity-0 {
  opacity: 0 !important;
}

.translate-x-0 {
  transform: translateX(0) !important;
}

.translate-x-full {
  transform: translateX(100%) !important;
}

/* 1. Collapse description from bottom to top */
.item {
  overflow: visible;
  max-height: none;
  /* animate slide and collapse together */
  transition:
    transform 0.25s ease,
    max-height 0.25s ease,
    padding 0.25s ease;
}

ul.feed-list,
.feed-container {
  overflow-x: hidden;
  /* clip any child transform that goes beyond the right edge */
}

/* Grouping & spacing */
.settings-group {
  margin-top: 0.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding: 0.5rem 0;
  box-sizing: border-box;
}

.settings-group.grow {
  flex: 1;
  flex-direction: column;
  align-items: stretch;
  margin-top: 1rem;
}

/* Make labels within settings-group not shrink */
.settings-group label {
  flex-shrink: 0;
}

/* Style for the text near the toggle switches */
.settings-group span[id$="-text"] { /* Targets #theme-text, #sync-text, #images-text */
  flex-shrink: 0; /* Prevent it from shrinking */
  margin-right: 0.5rem; /* Space between the text and the toggle switch */
  text-align: right; /* Align text to the right before the switch */
}

/* New flex container for toggle text and switch */
.settings-group > div.d-flex {
    display: flex;
    align-items: center;
}

/* (Optional) Ensure your save-button groups don’t steal extra space */
.settings-group:not(.grow) button {
  align-self: flex-end;
}

/* Style all buttons inside .settings-group */
.settings-group button {
  font-size: 1rem;
  min-width: 8rem;
  align-self: flex-end;
  padding: 0.5rem 1rem;
  border-radius: var(--border-radius);
  /* Default settings group buttons to primary/white text */
  background-color: var(--primary);
  color: var(--button-text-light);
}

.settings-group button:hover {
  background-color: var(--secondary);
  color: var(--fg); /* Assuming fg contrasts with secondary */
}

.settings-group button:focus {
  box-shadow: 0 0 0 3px var(--secondary), inset 0 0 0 1px var(--secondary); /* Outline in secondary */
  background-color: var(--secondary);
  color: var(--fg);
}

.settings-group button:active {
  background-color: var(--secondary-darker);
  color: var(--fg);
}


/* Consolidated and improved textarea styling */
.settings-textarea {
  width: 100%;
  height: 100%;
  flex: 1;
  min-height: 40vh;
  box-sizing: border-box;
  padding: 0.5rem;
  border: 1px solid var(--card-border);
  background-color: var(--card-bg);
  color: var(--fg);
  resize: vertical;
  border-radius: var(--border-radius);
  overflow-y: auto;
  font-family: inherit;
  font-size: 1rem;
  line-height: 1.4;
}

.shuffle-btn {
  width: 3.5em; /* Use em for consistent sizing relative to font */
  height: 3.5em; /* Make height equal to width for circle */
  background-color: var(--card-bg); /* Kept original base background */
  color: var(--fg); /* Kept original base color */
  border: none; /* Base styles */
  border-radius: 50%; /* Make it perfectly round */
  opacity: 0.8;
  box-shadow: 1px 1px 5px var(--card-shadow-color);
  border: 1px solid var(--card-border); /* Specific border */
  transition: background-color 0.2s ease, opacity 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;

  /* Align content for button */
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0; /* Remove padding to avoid impacting size with flex centering */
}

.shuffle-btn:hover {
  background-color: var(--primary);
  opacity: 1; /* Make it fully opaque on hover */
  color: var(--button-text-light); /* Text becomes light on hover */
}

.shuffle-btn:focus {
  outline: none;
  box-shadow: 0 0 0 3px var(--primary), 1px 1px 5px var(--card-shadow-color);
  background-color: var(--primary);
  opacity: 1;
  color: var(--button-text-light);
}

.shuffle-btn:active {
  background-color: var(--primary-darker);
  box-shadow: inset 1px 1px 5px rgba(0,0,0,0.2);
  transform: translateY(1px);
}

svg.shuffle-icon {
  width: 3em; /* Adjusted slightly smaller to fit within 3.5em button */
  height: 3em; /* Ensure it's square */
  margin: 0; /* Center the icon within the button */
}

span.shuffle-count {
  margin-top: -1em;
  font-size: smaller;
  margin-right: 0em;
  font-weight: 900;
  line-height: 2em;
}

.gear-icon {
  width: 3em; /* Adjusted to fit the new button size */
  height: 3em; /* Ensure it's square */
  margin: 0; /* Center the icon within the button */
}

---

### Settings Panel Styles

/* Style for the back button */
#back-button {
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
  background: none; /* Already transparent */
  border: none;
  color: var(--fg); /* Base color for the icon */
  font-size: 1.8rem;
  cursor: pointer;
  padding: 0.5rem;
  z-index: 10;
  transition: color 0.2s ease, transform 0.2s ease; /* Add transitions */
}

#back-button:hover {
  color: var(--primary); /* Hover color */
}

#back-button:focus {
  outline: none;
  box-shadow: 0 0 0 3px var(--primary); /* Outline for focus */
  color: var(--primary); /* Match hover color on focus */
}

#back-button:active {
  transform: scale(0.95); /* Slightly shrink on active */
  color: var(--primary-darker); /* Darker primary on active */
}


/* Hide the detailed settings blocks by default */
#rss-settings-block,
#keywords-settings-block {
  flex: 1;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
}

/* Ensure the main settings block is initially visible */
#main-settings {
  flex: 1;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
}


/* Style for the configure buttons */
.configure-button {
  background-color: var(--primary);
  color: var(--button-text-light); /* Use variable for text color */
  border: none;
  padding: 0.5rem 1rem;
  border-radius: var(--border-radius);
  cursor: pointer;
  margin-left: auto;
  transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;
}

.configure-button:hover {
  background-color: var(--secondary);
  color: var(--fg); /* Text color for light background (secondary) */
}

.configure-button:focus {
  outline: none;
  box-shadow: 0 0 0 3px var(--secondary);
  background-color: var(--secondary);
  color: var(--fg);
}

.configure-button:active {
  background-color: var(--secondary-darker);
  color: var(--fg);
}

/* Style for the container of text and configure button */
.settings-option {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem 0;
  border-bottom: 1px solid var(--card-border);
}

.settings-option:last-child {
  border-bottom: none;
}

.settings-option span {
  font-size: 1.1em;
  font-weight: bold;
}

/* Ensure save message span is styled correctly */
.save-message {
  font-size: 0.9em;
  color: var(--primary);
  margin-left: 0.5em;
  white-space: nowrap;
}

---

### Responsive Adjustments

/* Mobile specific adjustments (now default) */
body,
html {
  font-size: 14px;
}

p {
  font-size: 1rem !important;
  line-height: 1.4 !important;
}

.pubdate p,
.itemfrom p {
  font-size: x-small !important;
}

.pubdate,
.itemfrom {
  padding-right: 0.5em;
}

/* preserve flex layout on mobile */
.itemfrom {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.filter-select {
  margin-left: 0; /* Reset this to work with #left-aligned-controls */
}

.modal-content,
.item {
  border-radius: 10px;
}

.itemtitle {
  font-size: 1.25rem !important;
  padding: 1em 3rem 0.5em 0.75em;
  min-height: calc(1.4em * 3);
}

button.close {
  font-size: 1.25rem;
  border-radius: 0 10px 0 10px;
  opacity: 0.6;
  position: absolute;
}

button.star {
  font-size: 1.25rem;
  border-radius: 10px 0 0 0;
  opacity: 0.6;
  position: absolute;
}

.itemdescription {
  padding: 1em 1.8em 2em !important;
}

#header {
  padding: 0rem 0.5rem;
  margin-top: -0.25em;
  margin-right: -0.75em;
  padding-right: 1.2em;
}

/* Remove absolute positioning and previous centering attempts on mobile */
#header h2 {
  padding-right: 0;
  position: static; /* Reset to static for mobile */
  left: unset;
  transform: unset;
  margin-top: 0; /* Reset margin */
  text-align: left; /* Explicitly left-align on mobile */
}

/* Ensure the header options are pushed to the right on mobile */
#header-options {
  margin-left: auto;
}


.modal-content > button.close {
  font-size: 1.25rem;
  opacity: 0.8;
}

#scroll-to-top {
  bottom: 1em;
  right: 1em;
  width: 4rem;
  height: 4rem;
}


/* Tablet and up: wider cards & larger titles */
@media (min-width: 768px) {

  body,
  html {
    font-size: calc(18px + .2vw);
  }

  .modal-content {
    width: 85%;
  }

  .item {
    max-width: 75%;
    /* cards take 75% of viewport */
    margin: 2em auto;
    box-shadow: 1px 1px 50px 1px var(--card-shadow-color) !important;
  }

  .itemtitle h1 {
    font-size: 2rem !important;
  }

  .itemtitle h2 {
    font-size: 1.5rem !important;
  }

  .item {
    max-width: 85%;
    margin: 1.5em auto;
    float: none;
  }

  .itemtitle {
    font-size: 1.75rem !important;
    padding: 0.75em 3rem 0.2em 1.2em;
  }

  button.close,
  button.star {
    font-size: 2rem;
  }

  /* Desktop and up: half-width, centered, big headings */
  @media (min-width: 1024px) {
    body,
    html {
      font-size: calc(20px + .3vw);
    }

    .item {
      max-width: 50%;
      /* cards take half the screen */
      margin: 2.5em auto;
    }

    .itemtitle h1 {
      font-size: 2.5rem !important;
    }

    .itemtitle h2 {
      font-size: 2rem !important;
    }

    .pubdate p,
    .itemfrom p {
      font-size: smaller !important;
    }

    .item {
      float: unset;
      margin-left: 20%;
      margin-right: 20%;
      box-shadow: 1px 1px 100px 1px var(--card-shadow-color) !important;
      margin: 1.4em auto;
    }

    .filter-select {
      font-size: large;
    }

    /* Desktop header centering */
    #header {
      /* Revert `justify-content` to allow individual centering */
      justify-content: flex-start; /* Reset to default flex-start */
      position: relative; /* Make it a positioning context for absolute children */
    }

    #header .ntn-title {
        /* Keep `margin-right: auto` to push it away from #left-aligned-controls */
        /* But also ensure it acts as a flex item within the header */
        flex-grow: 1; /* Allow it to grow and take available space */
        text-align: center; /* Center the text horizontally within its flex space */
        margin: 0 auto; /* Center it horizontally as much as possible if other elements don't fill space */
    }

    #header h2 { /* Assuming this is your "ntn-title" */
      /* Remove absolute positioning. Flexbox handles centering now. */
      position: static;
      left: unset;
      transform: unset;
      margin-top: 0; /* Keep your original margin-top */
      text-align: center; /* Ensure the text itself is centered */
    }

    /* Push header options to the right on desktop */
    #header-options {
      margin-left: auto; /* This already correctly pushes it to the right */
      position: relative; /* Ensure it stays within the header */
      z-index: 2; /* Ensure it's above the centered title if needed */
    }

    /* Grouping for shuffle button, settings button, and options dropdown */
    #left-aligned-controls {
      /* Re-evaluate margin-right here, as ntn-title also has margin:auto */
      /* If you want the shuffle/settings buttons to be truly on the far left,
         and the title centered, and options far right, the header structure
         might need careful consideration with flexbox order or multiple flex containers.
         For now, keeping margin-right: auto on #left-aligned-controls
         will keep it next to the centered title and push header-options right. */
      margin-right: 1rem; /* Adjust as needed or remove if title takes precedence */
    }

    /* push the switch off to the right (already correct but ensure no conflicts) */
    #header .switch {
      margin-left: 0; /* Ensure no auto margin here */
      margin-right: 0;
    }
  }
}